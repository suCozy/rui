{"version":3,"file":"Pagination.stories-f25de2db.js","sources":["../../src/components/Common/Paginations/Pagination/index.tsx"],"sourcesContent":["import { contents000, contents300 } from '@/mixins/colors';\nimport {\n  IconArrowLeftDoubleS,\n  IconArrowLeftS,\n  IconArrowRightS,\n  IconArrowRightDoubleS,\n} from '@/icons';\nimport { range } from '@/common/utils/common';\n\nimport {\n  Pages,\n  Page,\n  PaginationContainer,\n  PageButton,\n  ArrowButton,\n} from '../styles';\nimport type { PaginationProps } from '../types';\nimport usePagination from '../usePagination';\n\nexport function Pagination({\n  activePage = 1,\n  totalItemCount = 0,\n  pageRangeDisplayed = 10,\n  onChangePage,\n  itemCountPerPage,\n  className,\n  showFirstButton = false,\n  showLastButton = false,\n}: PaginationProps) {\n  const {\n    firstPage,\n    rangeLastPage,\n    totalLastPage,\n    prevPage,\n    nextPage,\n    isPrevPageDisabled,\n    isNextPageDisabled,\n    isFirstPageDisabled,\n    isLastPageDisabled,\n  } = usePagination({\n    activePage,\n    totalItemCount,\n    pageRangeDisplayed,\n    itemCountPerPage,\n  });\n\n  const iconColor = (disabled: boolean) =>\n    disabled ? contents300 : contents000;\n\n  const onClickPrevPage = () => onChangePage(prevPage);\n  const onClickNextPage = () => onChangePage(nextPage);\n  const onClickFirstPage = () => onChangePage(1);\n  const onClickLastPage = () => onChangePage(totalLastPage);\n\n  const onClickPage = (page: number) => onChangePage(page);\n\n  return (\n    <PaginationContainer\n      className={className}\n      role=\"navigation\"\n      aria-label=\"페이지네이션\"\n    >\n      {showFirstButton && (\n        <ArrowButton\n          disabled={isFirstPageDisabled}\n          onClick={onClickFirstPage}\n          aria-label=\"첫 페이지로 이동\"\n        >\n          <IconArrowLeftDoubleS\n            color={iconColor(isFirstPageDisabled)}\n            aria-hidden=\"true\"\n          />\n        </ArrowButton>\n      )}\n      <ArrowButton\n        disabled={isPrevPageDisabled}\n        onClick={onClickPrevPage}\n        aria-label=\"이전 페이지로 이동\"\n      >\n        <IconArrowLeftS\n          color={iconColor(isPrevPageDisabled)}\n          aria-hidden=\"true\"\n        />\n      </ArrowButton>\n      <Pages>\n        {range(firstPage, rangeLastPage)?.map((_page) => (\n          <Page key={_page}>\n            <PageButton\n              selected={_page === activePage}\n              onClick={() => onClickPage(_page)}\n              aria-label={`페이지 ${_page}`}\n            >\n              {_page}\n            </PageButton>\n          </Page>\n        ))}\n      </Pages>\n      <ArrowButton\n        disabled={isNextPageDisabled}\n        onClick={onClickNextPage}\n        aria-label=\"다음 페이지로 이동\"\n      >\n        <IconArrowRightS\n          color={iconColor(isNextPageDisabled)}\n          aria-hidden=\"true\"\n        />\n      </ArrowButton>\n      {showLastButton && (\n        <ArrowButton\n          disabled={isLastPageDisabled}\n          onClick={onClickLastPage}\n          aria-label=\"마지막 페이지로 이동\"\n        >\n          <IconArrowRightDoubleS\n            color={iconColor(isLastPageDisabled)}\n            aria-hidden=\"true\"\n          />\n        </ArrowButton>\n      )}\n    </PaginationContainer>\n  );\n}\n"],"names":["Pagination","activePage","totalItemCount","pageRangeDisplayed","onChangePage","itemCountPerPage","className","showFirstButton","showLastButton","firstPage","rangeLastPage","totalLastPage","prevPage","nextPage","isPrevPageDisabled","isNextPageDisabled","isFirstPageDisabled","isLastPageDisabled","usePagination","iconColor","disabled","contents300","contents000","onClickPrevPage","onClickNextPage","onClickFirstPage","onClickLastPage","onClickPage","page","jsxs","PaginationContainer","jsx","ArrowButton","IconArrowLeftDoubleS","IconArrowLeftS","Pages","_a","range","_page","Page","PageButton","IconArrowRightS","IconArrowRightDoubleS"],"mappings":"8cAmBO,SAAAA,EAAA,CAAoB,WAAAC,EAAA,EACZ,eAAAC,EAAA,EACI,mBAAAC,EAAA,GACI,aAAAC,EACrB,iBAAAC,EACA,UAAAC,EACA,gBAAAC,EAAA,GACkB,eAAAC,EAAA,EAEpB,EAAA,OACE,KAAA,CAAM,UAAAC,EACJ,cAAAC,EACA,cAAAC,EACA,SAAAC,EACA,SAAAC,EACA,mBAAAC,EACA,mBAAAC,EACA,oBAAAC,EACA,mBAAAC,CACA,EAAAC,EAAA,CACgB,WAAAjB,EAChB,eAAAC,EACA,mBAAAC,EACA,iBAAAE,CACA,CAAA,EAGFc,EAAAC,GAAAA,EAAAC,EAAAC,EAGAC,EAAA,IAAAnB,EAAAQ,CAAA,EACAY,EAAA,IAAApB,EAAAS,CAAA,EACAY,EAAA,IAAArB,EAAA,CAAA,EACAsB,EAAA,IAAAtB,EAAAO,CAAA,EAEAgB,EAAAC,GAAAxB,EAAAwB,CAAA,EAEA,OAAAC,EACEC,EAAC,CAAA,UAAAxB,EACC,KAAA,aACK,aAAA,SACM,SAAA,CAEVC,GAAAwB,EACCC,EAAC,CAAA,SAAAhB,EACW,QAAAS,EACD,aAAA,YACE,SAAAM,EAEXE,EAAC,CAAA,MAAAd,EAAAH,CAAA,EACqC,cAAA,MACxB,CAAA,CACd,CAAA,EACFe,EAEFC,EAAC,CAAA,SAAAlB,EACW,QAAAS,EACD,aAAA,aACE,SAAAQ,EAEXG,EAAC,CAAA,MAAAf,EAAAL,CAAA,EACoC,cAAA,MACvB,CAAA,CACd,CAAA,EACFiB,EAAAI,EAAA,CAAA,UAAAC,EAAAC,EAAA5B,EAAAC,CAAA,IAAA,YAAA0B,EAAA,IAAAE,GAAAP,EAAAQ,EAAA,CAAA,SAAAR,EAIMS,EAAC,CAAA,SAAAF,IAAArC,EACqB,QAAA,IAAA0B,EAAAW,CAAA,EACY,aAAA,OAAAA,IACb,SAAAA,CAElB,CAAA,GAAAA,CAAA,GAAA,EAITP,EACAC,EAAC,CAAA,SAAAjB,EACW,QAAAS,EACD,aAAA,aACE,SAAAO,EAEXU,EAAC,CAAA,MAAAtB,EAAAJ,CAAA,EACoC,cAAA,MACvB,CAAA,CACd,CAAA,EACFP,GAAAuB,EAEEC,EAAC,CAAA,SAAAf,EACW,QAAAS,EACD,aAAA,cACE,SAAAK,EAEXW,EAAC,CAAA,MAAAvB,EAAAF,CAAA,EACoC,cAAA,MACvB,CAAA,CACd,CAAA,CACF,CAAA,CAAA,CAIR;;;;;;;;"}