{"version":3,"file":"utils-3af668cd.js","sources":["../../src/mixins/colors/utils.ts"],"sourcesContent":["import { isSSR } from '@/common/utils/common';\n\nimport type { ColorVariable, ThemeType } from './types';\n\n/** var(color)로 된 string을 color로 변경해줄 때 사용 */\nexport function getVariableName(variableName: ColorVariable) {\n  return variableName.slice(4, -1);\n}\n\n/** RDS컬러의 rgb값이 필요할 때 사용\n * @example rgba(${getRgb(contents000)},0.5)\n */\nexport function getRgb(color: ColorVariable) {\n  return `var(${getVariableName(color)}__rgb)`;\n}\n\n/** hex로 된 컬러값을 rgb값으로 변경해줌 */\nexport function hexToRgb(colorHex: string) {\n  let hexWithoutHash = colorHex.replace('#', '');\n\n  if (hexWithoutHash.length !== 3 && hexWithoutHash.length !== 6) {\n    throw new Error('Invalid hex color');\n  }\n\n  if (hexWithoutHash.length === 3) {\n    hexWithoutHash = [...hexWithoutHash].map((hex) => hex.repeat(2)).join();\n  }\n\n  const [, r, g, b] = hexWithoutHash\n    .split(/(..)(..)(..)/)\n    .map((hex) => parseInt(hex, 16));\n\n  return `${r},${g},${b}`;\n}\n\nexport function getBrowserTheme(): ThemeType {\n  if (!isSSR() && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n    return 'dark';\n  }\n  return 'light';\n}\n"],"names":["getVariableName","variableName","getRgb","color","hexToRgb","colorHex","hexWithoutHash","hex","r","g","b","getBrowserTheme","isSSR"],"mappings":"yCAKO,SAASA,EAAgBC,EAA6B,CACpD,OAAAA,EAAa,MAAM,EAAG,EAAE,CACjC,CAKO,SAASC,EAAOC,EAAsB,CACpC,MAAA,OAAOH,EAAgBG,CAAK,SACrC,CAGO,SAASC,EAASC,EAAkB,CACzC,IAAIC,EAAiBD,EAAS,QAAQ,IAAK,EAAE,EAE7C,GAAIC,EAAe,SAAW,GAAKA,EAAe,SAAW,EACrD,MAAA,IAAI,MAAM,mBAAmB,EAGjCA,EAAe,SAAW,IAC5BA,EAAiB,CAAC,GAAGA,CAAc,EAAE,IAAKC,GAAQA,EAAI,OAAO,CAAC,CAAC,EAAE,KAAK,GAGxE,KAAM,CAAA,CAAGC,EAAGC,EAAGC,CAAC,EAAIJ,EACjB,MAAM,cAAc,EACpB,IAAKC,GAAQ,SAASA,EAAK,EAAE,CAAC,EAE1B,MAAA,GAAGC,KAAKC,KAAKC,GACtB,CAEO,SAASC,GAA6B,CAC3C,MAAI,CAACC,EAAM,GAAK,OAAO,WAAW,8BAA8B,EAAE,QACzD,OAEF,OACT"}