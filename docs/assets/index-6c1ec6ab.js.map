{"version":3,"file":"index-6c1ec6ab.js","sources":["../../src/components/Buttons/Button/const.ts","../../src/components/Buttons/Button/styles.ts","../../src/components/Buttons/Button/index.tsx"],"sourcesContent":["import { contents000, contents300, contents999 } from '@/mixins/colors';\nimport type { SpinnerSize } from '@/components/Common/Spinner/types';\n\nimport type { ButtonSize, ButtonVariant } from './types';\n\nexport const BUTTON_SIZES = {\n  small: {\n    typography: 'Body2_M',\n    height: '32px',\n    minWidth: '68px',\n    padding: '0 16px',\n  },\n  medium: {\n    typography: 'Body1_M',\n    height: '36px',\n    minWidth: '78px',\n    padding: '0 20px',\n  },\n  large: {\n    typography: 'Headline4_M',\n    height: '44px',\n    minWidth: '108px',\n    padding: '0 20px',\n  },\n  xLarge: {\n    typography: 'Headline4_M',\n    height: '52px',\n    minWidth: '116px',\n    padding: '0 24px',\n  },\n} as const satisfies Record<ButtonSize, unknown>;\n\nexport const BUTTON_COLORS = {\n  primary: {\n    backgroundColor: contents000,\n    color: contents999,\n  },\n  outline: {\n    backgroundColor: contents300,\n    color: contents000,\n  },\n} as const satisfies Record<ButtonVariant, unknown>;\n\nexport const SPINNER_SIZE_MAP = {\n  small: 'small',\n  medium: 'small',\n  large: 'medium',\n  xLarge: 'medium',\n} as const satisfies Record<ButtonSize, SpinnerSize>;\n\nexport const ICON_GAP_MAP = {\n  small: '4px',\n  medium: '4px',\n  large: '8px',\n  xLarge: '8px',\n} as const satisfies Record<ButtonSize, string>;\n","import styled, { css } from 'styled-components';\n\nimport {\n  disabled,\n  getRgb,\n  getTypographyStyles,\n  primary100,\n  primary200,\n} from '@/mixins';\n\nimport { BUTTON_COLORS, BUTTON_SIZES, ICON_GAP_MAP } from './const';\nimport type { ButtonStyleProps } from './types';\n\nexport const StyledButton = styled.button<ButtonStyleProps>(\n  ({ variant, $size, layout, $color }) => [\n    // 공용 스타일\n    css`\n      all: unset;\n      appearance: none;\n      box-sizing: border-box;\n      user-select: none;\n      cursor: pointer;\n      position: relative;\n      overflow: hidden;\n\n      display: ${layout === 'inline' ? 'inline-flex' : 'flex'};\n      flex-shrink: 0;\n      align-items: center;\n      justify-content: center;\n      gap: ${ICON_GAP_MAP[$size]};\n\n      ${getTypographyStyles(BUTTON_SIZES[$size].typography)}\n      ${layout === 'fullBlock' && `width: 100%;`}\n      min-width: ${BUTTON_SIZES[$size].minWidth};\n      height: ${BUTTON_SIZES[$size].height};\n      padding: ${BUTTON_SIZES[$size].padding};\n      border-radius: 4px;\n\n      color: ${(variant === 'outline' ? $color : null) ??\n      BUTTON_COLORS[variant].color};\n\n      &:disabled {\n        cursor: not-allowed;\n\n        &::before {\n          display: none;\n        }\n      }\n\n      &::before {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: rgba(${getRgb(primary200)});\n        opacity: 0;\n        pointer-events: none;\n\n        transition: opacity 0.2s;\n      }\n      @media (hover: hover) {\n        &:hover::before {\n          opacity: 0.1;\n        }\n      }\n      &:active::before {\n        opacity: 0.2;\n      }\n    `,\n\n    // primary 스타일\n    variant === 'primary' &&\n      css`\n        background-color: ${$color ?? BUTTON_COLORS[variant].backgroundColor};\n        &:disabled {\n          background-color: ${disabled};\n        }\n        &::before {\n          background-color: ${primary200};\n        }\n      `,\n\n    // outline 스타일\n    variant === 'outline' &&\n      css`\n        border: 1px solid ${$color ?? BUTTON_COLORS[variant].backgroundColor};\n        &:disabled {\n          border-color: ${disabled};\n          color: ${disabled};\n        }\n        &::before {\n          background-color: ${$color ?? primary100};\n        }\n      `,\n  ]\n);\n","import type { ForwardRefRenderFunction } from 'react';\nimport { forwardRef, memo } from 'react';\n\nimport { Spinner } from '@/components/Common';\n\nimport { SPINNER_SIZE_MAP } from './const';\nimport { StyledButton } from './styles';\nimport type { ButtonProps } from './types';\n\nconst _Button: ForwardRefRenderFunction<HTMLButtonElement, ButtonProps> = (\n  {\n    children,\n    color,\n    size = 'small',\n    variant = 'primary',\n    layout = 'block',\n    isLoading = false,\n    icon,\n    iconPosition,\n    ...props\n  },\n  ref\n) => (\n  <StyledButton\n    $color={color}\n    $size={size}\n    variant={variant}\n    layout={layout}\n    isLoading={isLoading}\n    aria-live=\"polite\"\n    aria-busy={isLoading}\n    ref={ref}\n    {...props}\n  >\n    {isLoading ? (\n      <Spinner size={SPINNER_SIZE_MAP[size]} />\n    ) : (\n      <>\n        {iconPosition === 'left' && icon}\n        {children}\n        {iconPosition === 'right' && icon}\n      </>\n    )}\n  </StyledButton>\n);\n\nexport const Button = memo(forwardRef(_Button));\n"],"names":["BUTTON_SIZES","BUTTON_COLORS","contents000","contents999","contents300","SPINNER_SIZE_MAP","ICON_GAP_MAP","StyledButton","styled","variant","$size","layout","$color","css","getTypographyStyles","getRgb","primary200","disabled","primary100","_Button","children","color","size","isLoading","icon","iconPosition","props","ref","jsx","Spinner","jsxs","Fragment","Button","memo","forwardRef"],"mappings":"+SAKO,MAAMA,EAAe,CAC1B,MAAO,CACL,WAAY,UACZ,OAAQ,OACR,SAAU,OACV,QAAS,QACX,EACA,OAAQ,CACN,WAAY,UACZ,OAAQ,OACR,SAAU,OACV,QAAS,QACX,EACA,MAAO,CACL,WAAY,cACZ,OAAQ,OACR,SAAU,QACV,QAAS,QACX,EACA,OAAQ,CACN,WAAY,cACZ,OAAQ,OACR,SAAU,QACV,QAAS,QACX,CACF,EAEaC,EAAgB,CAC3B,QAAS,CACP,gBAAiBC,EACjB,MAAOC,CACT,EACA,QAAS,CACP,gBAAiBC,EACjB,MAAOF,CACT,CACF,EAEaG,EAAmB,CAC9B,MAAO,QACP,OAAQ,QACR,MAAO,SACP,OAAQ,QACV,EAEaC,EAAe,CAC1B,MAAO,MACP,OAAQ,MACR,MAAO,MACP,OAAQ,KACV,EC1CaC,EAAeC,EAAO,OACjC,CAAC,CAAE,QAAAC,EAAS,MAAAC,EAAO,OAAAC,EAAQ,OAAAC,KAAa,CAEtCC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,iBASaF,IAAW,SAAW,cAAgB;AAAA;AAAA;AAAA;AAAA,aAI1CL,EAAaI,CAAK;AAAA;AAAA,QAEvBI,EAAoBd,EAAaU,CAAK,EAAE,UAAU;AAAA,QAClDC,IAAW,aAAe;AAAA,mBACfX,EAAaU,CAAK,EAAE;AAAA,gBACvBV,EAAaU,CAAK,EAAE;AAAA,iBACnBV,EAAaU,CAAK,EAAE;AAAA;AAAA;AAAA,gBAGrBD,IAAY,UAAYG,EAAS,OAC3CX,EAAcQ,CAAO,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAiBIM,EAAOC,CAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAiB9CP,IAAY,WACVI;AAAAA,4BACsBD,GAAUX,EAAcQ,CAAO,EAAE;AAAA;AAAA,8BAE/BQ;AAAA;AAAA;AAAA,8BAGAD;AAAA;AAAA,QAK1BP,IAAY,WACVI;AAAAA,4BACsBD,GAAUX,EAAcQ,CAAO,EAAE;AAAA;AAAA,0BAEnCQ;AAAA,mBACPA;AAAA;AAAA;AAAA,8BAGWL,GAAUM;AAAA;AAAA,OAGtC,CACF,ECxFAC,EAAA,CAAA,CACE,SAAAC,EACE,MAAAC,EACA,KAAAC,EAAA,QACO,QAAAb,EAAA,UACG,OAAAE,EAAA,QACD,UAAAY,EAAA,GACG,KAAAC,EACZ,aAAAC,EACA,GAAAC,CAEF,EAAAC,IAAAC,EAGArB,EAAC,CAAA,OAAAc,EACS,MAAAC,EACD,QAAAb,EACP,OAAAE,EACA,UAAAY,EACA,YAAA,SACU,YAAAA,EACC,IAAAI,EACX,GAAAD,EACI,SAAAH,EAAAK,EAAAC,EAAA,CAAA,KAAAxB,EAAAiB,CAAA,CAAA,CAAA,EAAAQ,EAAAC,EAAA,CAAA,SAAA,CAMCN,IAAA,QAAAD,EAA2BJ,EAC3BK,IAAA,SAAAD,CAC4B,EAAA,CAC/B,CAEJ,EAGKQ,EAAAC,EAAA,KAAAC,aAAAf,CAAA,CAAA"}