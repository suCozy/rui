{"version":3,"file":"Control.stories-9848b5ed.js","sources":["../../src/components/Controls/Control/ControlOptionIcon/index.tsx","../../src/components/Controls/Control/index.tsx"],"sourcesContent":["import {\n  ControlBookmarkOffM,\n  ControlBookmarkOnM,\n  ControlCheckboxOffM,\n  ControlCheckboxOnM,\n  ControlCheckOffM,\n  ControlCheckOnM,\n  ControlFavoriteOff,\n  ControlFavoriteOn,\n} from '@/icons';\nimport { contents300, secondary100 } from '@/mixins/colors';\n\nimport type { ControlChildrenType, ControlOption } from '../types';\n\nconst ICON_NAME: Record<\n  ControlOption,\n  Record<'on' | 'off', React.FC<React.SVGProps<SVGSVGElement>>>\n> = {\n  check: { on: ControlCheckOnM, off: ControlCheckOffM },\n  checkbox: { on: ControlCheckboxOnM, off: ControlCheckboxOffM },\n  favorite: { on: ControlBookmarkOnM, off: ControlBookmarkOffM },\n  bookmark: { on: ControlFavoriteOn, off: ControlFavoriteOff },\n};\n\nexport function ControlOptionIcon({\n  checked,\n  size,\n  option,\n}: ControlChildrenType) {\n  const iconSize = size === 'small' ? 16 : 24;\n  const Icon = checked ? ICON_NAME[option].on : ICON_NAME[option].off;\n\n  return (\n    <Icon\n      width={iconSize}\n      height={iconSize}\n      aria-hidden=\"true\"\n      color={checked ? secondary100 : contents300}\n    />\n  );\n}\n","import { ControlOptionIcon } from './ControlOptionIcon';\nimport { ControlInput, ControlRoot } from './styles';\nimport type { ControlProps } from './types';\n\n/**\n *\n * @prop {ReactNode} children\n * @prop {boolean} checked\n * @prop {'small' | 'medium'} size / default: 'medium'\n * @prop {'check' | 'checkbox' | 'favorite' | 'bookmark'} option\n * @prop {function} onCheckedChange\n * @prop {boolean} disabled boolean\n */\nexport function Control({\n  children,\n  checked,\n  disabled = false,\n  size = 'medium',\n  option = 'checkbox',\n  onCheckedChange,\n  id,\n  name,\n  ...props\n}: ControlProps) {\n  return (\n    <ControlRoot htmlFor={id}>\n      <ControlInput\n        id={id}\n        type=\"checkbox\"\n        aria-checked={checked}\n        aria-label={name}\n        tabIndex={0}\n        checked={checked}\n        disabled={disabled}\n        onChange={(e) => {\n          if (disabled) {\n            return;\n          }\n          onCheckedChange(e);\n        }}\n        {...props}\n      />\n      <ControlOptionIcon checked={checked} size={size} option={option} />\n      {/* 라벨 디자인 미정 */}\n      {children}\n    </ControlRoot>\n  );\n}\n"],"names":["ICON_NAME","ControlCheckOnM","ControlCheckOffM","ControlCheckboxOnM","ControlCheckboxOffM","ControlBookmarkOnM","ControlBookmarkOffM","ControlFavoriteOn","ControlFavoriteOff","ControlOptionIcon","checked","size","option","iconSize","Icon","jsx","secondary100","contents300","Control","children","disabled","onCheckedChange","id","name","props","jsxs","ControlRoot","ControlInput","e"],"mappings":"6TAcA,MAAAA,EAAA,CAGI,MAAA,CAAA,GAAAC,EAAA,IAAAC,CAAA,EACkD,SAAA,CAAA,GAAAC,EAAA,IAAAC,CAAA,EACS,SAAA,CAAA,GAAAC,EAAA,IAAAC,CAAA,EACA,SAAA,CAAA,GAAAC,EAAA,IAAAC,CAAA,CAE/D,EAEO,SAAAC,EAAA,CAA2B,QAAAC,EAChC,KAAAC,EACA,OAAAC,CAEF,EAAA,CACE,MAAAC,EAAAF,IAAA,QAAA,GAAA,GACAG,EAAAJ,EAAAV,EAAAY,CAAA,EAAA,GAAAZ,EAAAY,CAAA,EAAA,IAEA,OAAAG,EACED,EAAC,CAAA,MAAAD,EACQ,OAAAA,EACC,cAAA,OACI,MAAAH,EAAAM,EAAAC,CACoB,CAAA,CAGtC,gmBC3BO,SAAAC,EAAA,CAAiB,SAAAC,EACtB,QAAAT,EACA,SAAAU,EAAA,GACW,KAAAT,EAAA,SACJ,OAAAC,EAAA,WACE,gBAAAS,EACT,GAAAC,EACA,KAAAC,EACA,GAAAC,CAEF,EAAA,CACE,OAAAC,EAAAC,EAAA,CAAA,QAAAJ,EAAA,SAAA,CAEIP,EAAAY,EAAC,CAAA,GAAAL,EACC,KAAA,WACK,eAAAZ,EACS,aAAAa,EACF,SAAA,EACF,QAAAb,EACV,SAAAU,EACA,SAAAQ,GAAA,CAEER,GAGAC,EAAAO,CAAA,CAAiB,EACnB,GAAAJ,CACI,CAAA,EACNT,EAAAN,EAAA,CAAA,QAAAC,EAAA,KAAAC,EAAA,OAAAC,CAAA,CAAA,EACiEO,CAEhE,CAAA,CAAA,CAGP;;;;;;;;;;;;;;;;"}